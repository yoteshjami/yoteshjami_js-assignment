Var : The JavaScript variables statement is used to declare a variable and, optionally, we can initialize the value of that variable.

Example: var a =10;

Variable declarations are processed before the execution of the code.
The scope of a JavaScript variable declared with var is its current execution context.
The scope of a JavaScript variable declared outside the function is global.

function nodeSimplified(){
  var a =15;
  console.log(a);  // output 15
  if(true){
   var a=40;
   console.log(a); // output 40
  }
  console.log(a);  // output 40
}

let : The let statement declares a local variable in a block scope. It is similar to var, in that we can optionally initialize the variable.

Example: let a =10;

function nodeSimplified(){
  let a =15;
  console.log(a);  // output 15
  if(true){
   let a=40;
   console.log(a); // output 40
  }
  console.log(a);  // output 15
}

The let statement allows you to create a variable with the scope limited to the block on which it is used.
It is similar to the variable we declare in other languages like Java, .NET, etc.

const : const statement values can be assigned once and they cannot be reassigned. The scope of const statement works similar to let statements.

Example: const a =10;

function nodeSimplified(){
  const MY_VARIABLE =15;
  console.log(MY_VARIABLE);  //output 15
  MY_VARIABLE =40;           //throws type error
  console.log(MY_VARIABLE); 
}
